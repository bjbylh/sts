{% include "./top.html" %}

<link href="/static/metronic/assets/global/plugins/bootstrap-table/bootstrap-table.min.css" rel="stylesheet" type="text/css"/>
<link href="/static/metronic/assets/global/css/components.min.css" rel="stylesheet" id="style_components" type="text/css"/>
<link href="/static/metronic/assets/global/css/plugins.min.css" rel="stylesheet" type="text/css"/>
<script src="/static/metronic/assets/global/plugins/bootstrap-table/bootstrap-table.min.js" type="text/javascript"></script>
<script src="/static/metronic/assets/global/plugins/bootstrap-table/locale/bootstrap-table-zh-CN.min.js" type="text/javascript"></script>
<script src="/static/metronic/assets/global/scripts/app.min.js" type="text/javascript"></script>
<script src="/static/metronic/assets/pages/scripts/table-bootstrap.min.js" type="text/javascript"></script>

<style>
    .bars {
        height: 0px !important;
        margin: 0px !important;
    }

    #sattable .btn {
        width: 130px;
    }
</style>

<input type="hidden" id="_hsatid" value="{{data._id}}"/>
<input type="hidden" id="_hsatname" value="{{data.name}}"/>

<div class="col-md-12">
    <!-- BEGIN EXAMPLE TABLE PORTLET-->
    <div class="portlet light ">
        <div class="portlet-title">
            <div class="caption font-dark">
                <i class="icon-settings font-dark"></i>
                <span class="caption-subject bold uppercase">{{data.name}}<i
                        class="fa fa-chevron-right"></i>结构管理</span>
            </div>
            <div class="tools"></div>
        </div>
        <div class="portlet-body">
            <table id="sattable" class="table table-striped dt-responsive" cellspacing="0" width="100%"></table>
        </div>
    </div>
</div>

<script>
  var saveSubSysFunc = function(index, layero) {
    var data = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (data != null && data.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/subsys/doSave',
        data: {'data': JSON.stringify(data[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(feedback) {
          showMessageNomal(feedback.msg);
          if (feedback.success === true) {
            layer.close(index);
            $('#subsystable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }
        }
      });
    }
    else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var delSubsysFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/subsys/doDelete',
        data: {data:JSON.stringify(tar[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(data) {
          showMessageNomal(data.msg);
          if(data.success === true){
            layer.close(index);
            $('#subsystable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }
        }
      });
    }
    else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var saveGroundDevFunc = function(index, layero) {
    var data = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (data != null && data.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/grounddev/doSave',
        data: {'data': JSON.stringify(data[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(feedback) {
          showMessageNomal(feedback.msg);
          if (feedback.success === true) {
            layer.close(index);
            $('#grounddevtable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }
        }
      });
    }else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var delGroundDevFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/grounddev/doDelete',
        data: {data:JSON.stringify(tar[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(data) {
          showMessageNomal(data.msg);
          if(data.success===true){
            layer.close(index);
            $('#grounddevtable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }
        }
      });
    }else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var saveDeviceFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/device/doSave',
        data: {'data': JSON.stringify(tar[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(feedback) {
          showMessageNomal(feedback.msg);
          if (feedback.success === true) {
            layer.close(index);
            $('#devicetable_' + tar[0].subsys).bootstrapTable('refresh');
          }
        }
      });
    }else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var delDeviceFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/device/doDelete',
        data: {data:JSON.stringify(tar[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(data) {
          showMessageNomal(data.msg);
          if(data.success===true){
            layer.close(index);
            $('#devicetable_' + tar[0].subsysid).bootstrapTable('refresh');
          }
        }
      });
    }else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var saveChannelFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/channel/doSave',
        data: {'data': JSON.stringify(tar[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(feedback) {
          showMessageNomal(feedback.msg);
          if (feedback.success === true) {
            layer.close(index);
            $('#channeltable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }
        }
      });
    }
  };

  var delChannelFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/channel/doDelete',
        data: {data:JSON.stringify(tar[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(data) {
          showMessageNomal(data.msg);
          if(data.success===true){
            layer.close(index);
            $('#channeltable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }

        }
      });
    }else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var saveVCTypeFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/vctype/doSave',
        data: {'data': JSON.stringify(tar[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(feedback) {
          showMessageNomal(feedback.msg);
          if (feedback.success === true) {
            layer.close(index);
            $('#vctypetable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }
        }
      });
    }else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var delVCTypeFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/vctype/doDelete',
        data: {data:JSON.stringify(tar[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(msg) {
          showMessageNomal(msg.msg);
          if (msg.success === true) {
            layer.close(index);
            $('#vctypetable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }
        }
      });
    }else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var saveFormulaFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/formula/doSave',
        data: {'data': JSON.stringify(tar[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(feedback) {
          showMessageNomal(feedback.msg);
          if (feedback.success === true) {
            layer.close(index);
            $('#formulatable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }
        }
      });
    }else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var delFormulaFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/formula/doDelete',
        data: {data:JSON.stringify(tar[0]), '_satid': tar[0]._satid},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(data) {
          showMessageNomal(data.msg);
          if(data.success===true){
            layer.close(index);
            $('#formulatable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }
        }
      });
    }else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var saveRegulateFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/regulate/doSave',
        data: {'data': JSON.stringify(tar[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(feedback) {
          showMessageNomal(feedback.msg);
          if (feedback.success === true) {
            layer.close(index);
            $('#regulatetable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }
        }
      });
    }else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var delRegulateFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/regulate/doDelete',
        data: {data:JSON.stringify(tar[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(data) {
          showMessageNomal(data.msg);
          if(data.success===true){
            layer.close(index);
            $('#regulatetable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }
        }
      });
    }else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var saveModeFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/mode/doSave',
        data: {'data': JSON.stringify(tar[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(feedback) {
          showMessageNomal(feedback.msg);
          if (feedback.success === true) {
            layer.close(index);
            $('#modetable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }
        }
      });
    }else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var delModeFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/mode/doDelete',
        data: {data:JSON.stringify(tar[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(data) {
          showMessageNomal(data.msg);
          if(data.success===true){
            layer.close(index);
            $('#modetable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }
        }
      });
    }else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var saveParameterFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/parameter/doSave',
        data: {'data': JSON.stringify(tar[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(feedback) {
          showMessageNomal(feedback.msg);
          if (feedback.success === true) {
            layer.close(index);
            $('#parametertable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }
        }
      });
    }else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var delParameterFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/parameter/doDelete',
        data: {data:JSON.stringify(tar[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(data) {
          showMessageNomal(data.msg);
          if(data.success===true){
            layer.close(index);
            $('#parametertable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }
        }
      });
    }else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var saveInstructionFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/instruction/doSave',
        data: {'data': JSON.stringify(tar[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');

        },
        success: function(feedback) {
          showMessageNomal(feedback.msg);
          if (feedback.success === true) {
            layer.close(index);
            $('#instructiontable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }
        }
      });
    }else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var delInstructionFunc = function(index, layero) {
    var tar = $(layero).find('iframe')[0].contentWindow.callbackdata();
    if (tar != null && tar.length>0) {
      $.ajax({
        cache: true,
        type: 'POST',
        url: '/bdm/instruction/doDelete',
        data: {data:JSON.stringify(tar[0]), '_satid': $('#_hsatid').val()},
        async: false,
        error: function(request) {
          showMessageAbnomal('操作错误，请检查后重试');
        },
        success: function(data) {
          showMessageNomal(data.msg);
          if(data.success===true){
            layer.close(index);
            $('#instructiontable_' + $('#_hsatid').val()).bootstrapTable('refresh');
          }
        }
      });
    }else {
      showMessageAbnomal("未能获取表单数据，请检查后重试");
    }
  };

  var importModesFunc = function(sat) {

  };

  $(document).ready(function() {
    var cols = [{
      field: 'name',
      title: '名称'
    }, {
      field: 'code',
      title: '代号'
    },
      {
        field: 'code_out',
        title: '展示代号'
      }, {
        field: 'stage',
        title: '阶段'
      }, {
        field: 'factory',
        title: '抓总单位'
      }, {
        field: 'field',
        title: '所属领域'
      }, {
        field: 'applyField',
        title: '应用领域'
      }, {
        title: '操作',
        formatter: function(value, row, index) {
          return '<a class="btn green btn-xs demo-loading-btn" onclick=\'tabs("/bdm/satellite/params?_satid=' + row._id + '","' + row.name + '关键参数管理")\'>关键参数管理</a>';//+
        }
      }];
    $('#sattable').bootstrapTable({
      toolbar: '#toolbar',
      locale: 'zh-CN',
      detailView: true,
      url: 'getSatbyId',
      method: 'get',
      queryParams: {'_id': $('#_hsatid').val()},
      sidePagination: 'client', //服务端处理分页
      dataType: 'json',
      striped: true,
      pagination: false,
      singleSelect: false,
      pageSize: 10,
      cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
      pageNumber: 1,
      pageList: [10, 30, 50],
      search: false, //不显示 搜索框
      uniqueId: '_id', //每一行的唯一标识，一般为主键列
      showColumns: false, //不显示下拉框（选择显示的列）
      undefinedText: '',
      columns: cols,
      onExpandRow: function(index, row, $detail) {
        InitSatStruct(index, row, $detail);
      },
      onLoadSuccess: function() {
        $('#sattable').bootstrapTable('expandRow', 0);
      },
    });
  });

  _satstructdata = [
    {'nodename': '<i class="fa fa-tasks" style="color:blue"></i>&nbsp数据流', 'nodecode': 'datatype'},
    {'nodename': '<i class="fa fa-road" style="color:blue"></i>&nbsp虚拟信道', 'nodecode': 'vctype'},
    {'nodename': '<i class="fa fa-area-chart" style="color:blue"></i>&nbsp模式', 'nodecode': 'mode'},
    {'nodename': '<i class="fa fa-cc" style="color:blue"></i>&nbsp分系统', 'nodecode': 'subsystem'},
    {'nodename': '<i class="fa fa-desktop" style="color:blue"></i>&nbsp地面设备', 'nodecode': 'groundsys'},
    {'nodename': '<i class="fa fa-line-chart" style="color:blue"></i>&nbsp计算公式', 'nodecode': 'formula'},
    {'nodename': '<i class="fa fa-cogs" style="color:blue"></i>&nbsp校准方法', 'nodecode': 'regulate'},
    {'nodename': '<i class="fa fa-rss" style="color:blue"></i>&nbsp整星遥测', 'nodecode': 'alltm'},
    {'nodename': '<i class="fa fa-cloud" style="color:blue"></i>&nbsp整星遥控', 'nodecode': 'alltc'},
    {'nodename': '<i class="fa fa-cloud" style="color:blue"></i>&nbsp判读规则', 'nodecode': 'allrule'}
  ];

  function InitSatStruct(index, satrow, $detail) {
    var structCols = [{
      field: 'nodename',
      title: '节点名称',
      sortable: false
    },
      {
        title: '操作',
        formatter: function(value, row, index) {
          if (row['nodecode'] === 'subsystem') {
            return '<a class="btn green btn-xs demo-loading-btn" onclick=\'openLayuiWithAreaFunc("新建分系统","/bdm/subsys/edit?_satid=' + $('#_hsatid').val() + '",["900px","560px"],saveSubSysFunc)\'>添加分系统</a>&nbsp;&nbsp;';
          }
          if (row['nodecode'] === 'groundsys') {
            return '<a class="btn green btn-xs demo-loading-btn" onclick=\'openLayuiWithAreaFunc("新建地面设备","/bdm/grounddev/edit?_satid=' + $('#_hsatid').val() + '",["900px","560px"],saveGroundDevFunc)\'>添加地面设备</a>&nbsp;&nbsp;';
          }
          if (row['nodecode'] === 'datatype') {
            return '<a class="btn green btn-xs demo-loading-btn" onclick=\'openLayuiWithAreaFunc("新建数据类型/通道","/bdm/channel/edit?_satid=' + $('#_hsatid').val() + '",["900px","500px"],saveChannelFunc)\'>添加数据类型/通道</a>&nbsp;&nbsp;';
          }
          if (row['nodecode'] === 'mode') {
            return '<a class="btn green btn-xs demo-loading-btn" onclick=\'openLayuiWithAreaFunc("新建模式","/bdm/mode/edit?_satid=' + $('#_hsatid').val() + '",["900px","430px"],saveModeFunc)\'>添加模式</a>&nbsp;&nbsp;' +
            '<a class="btn green btn-xs demo-loading-btn" onclick=\'tabs("/bdm/mode/maintain?_satid=' + $('#_hsatid').val() + '","' + $('#_hsatname').val() + '模式列表维护")\'>维护模式列表</a>&nbsp;&nbsp;';
          }
          if (row['nodecode'] === 'formula') {
            return '<a class="btn green btn-xs demo-loading-btn" onclick=\'openLayuiWithAreaFunc("新建计算公式","/bdm/formula/edit?_satid=' + $('#_hsatid').val() + '",["900px","700px"],saveFormulaFunc)\'>添加计算公式</a>&nbsp;&nbsp;';
          }
          if (row['nodecode'] === 'regulate') {
            return '<a class="btn green btn-xs demo-loading-btn" onclick=\'openLayuiWithAreaFunc("新建校准方法","/bdm/regulate/edit?_satid=' + $('#_hsatid').val() + '",["900px","580px"],saveRegulateFunc)\'>添加校准方法</a>&nbsp;&nbsp;';
          }
          if (row['nodecode'] === 'alltm') {
            return '<a class="btn green btn-xs demo-loading-btn" onclick=\'openLayuiWithAreaFunc("新建遥测参数","/bdm/parameter/edit?_satid=' + $('#_hsatid').val() + '",["900px","650px"],saveParameterFunc)\'>添加遥测参数</a>&nbsp;&nbsp;' +
              '<a class="btn green btn-xs demo-loading-btn" onclick=\'tabs("/bdm/parameter/maintain?_satid=' + $('#_hsatid').val() + '","' + $('#_hsatname').val() + '遥测参数维护")\'>维护整星遥测参数</a>&nbsp;&nbsp;';
          }
          if (row['nodecode'] === 'alltc') {
            return '<a class="btn green btn-xs demo-loading-btn" onclick=\'openLayuiWithAreaFunc("新建遥控指令","/bdm/instruction/edit?_satid=' + $('#_hsatid').val() + '",["900px","650px"],saveInstructionFunc)\'>添加遥控指令</a>&nbsp;&nbsp;' +
              '<a class="btn btn-xs green demo-loading-btn" onclick=\'tabs("/bdm/instruction/maintain?_satid=' + $('#_hsatid').val() + '","' + $('#_hsatname').val() + '遥控指令")\'>维护整星遥控指令</a>&nbsp;&nbsp;';
          }
          if (row['nodecode'] === 'vctype') {
            return '<a class="btn green btn-xs demo-loading-btn" onclick=\'openLayuiWithAreaFunc("新建虚拟信道","/bdm/vctype/edit?_satid=' + $('#_hsatid').val() + '",["900px","490px"],saveVCTypeFunc)\'>添加虚拟信道</a>&nbsp;&nbsp;';
          }
          if (row['nodecode'] === 'allrule') {
            return '<a class="btn green btn-xs demo-loading-btn" onclick="#">添加规则分组</a>&nbsp;&nbsp;';
          }
        }
      }];
    var cur_table = $detail.html('<div id="dv" class="box-content">' +
      '<table id="structtable" data-reorderable-columns="false"></table></div>').find('table');
    $(cur_table).bootstrapTable({
      locale: 'zh-CN',
      dataType: 'json',
      detailView: true,
      sidePagination: 'client', //客户端处理分页
      sortable: 'false',
      striped: true,
      undefinedText: '',
      singleSelect: false,
      pagination: false,
      pageSize: 10,
      pageNumber: 1,
      pageList: [10, 30, 50, 100],
      cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
      search: false, //不显示 搜索框
      uniqueId: '_id', //每一行的唯一标识，一般为主键列
      showColumns: false, //不显示下拉框（选择显示的列）
      columns: structCols,
      data: _satstructdata,
      onLoadSuccess: function() { //加载成功时执行
      },
      onExpandRow: function(index, row, $subdetail) {
        if (row['nodecode'] === 'subsystem') {
          InitSubSys(index, satrow, $subdetail);
        }
        if (row['nodecode'] === 'groundsys') {
          InitGroundDevice(index, satrow, $subdetail);
        }
        if (row['nodecode'] === 'datatype') {
          InitChannel(index, satrow, $subdetail);
        }
        if (row['nodecode'] === 'mode') {
          InitMode(index, satrow, $subdetail);
        }
        if (row['nodecode'] === 'formula') {
          InitFormula(index, satrow, $subdetail);
        }
        if (row['nodecode'] === 'regulate') {
          InitRegulate(index, satrow, $subdetail);
        }
        if (row['nodecode'] === 'alltm') {
          InitAllTM(index, satrow, $subdetail);
        }
        if (row['nodecode'] === 'alltc') {
          InitAllTC(index, satrow, $subdetail);
        }
        if (row['nodecode'] === 'vctype') {
          InitVCType(index, satrow, $subdetail);
        }
        if (row['nodecode'] === 'allrule') {
          InitRuleGroup(index, satrow, $subdetail);
        }
      }
    });
  }

  function InitSubSys(index, satrow, $detail) {
    var subsysCols = [{
      field: 'name',
      title: '分系统名称',
      sortable: true
    }, {
      field: 'code',
      title: '分系统代号',
      sortable: true
    }, {
      field: 'remark',
      title: '描述',
      sortable: true
    }, {
      field: 'responsible',
      title: '责任单位',
      sortable: true
    }, {
      title: '操作',
      formatter: function(value, subsysrow, index) {
        return '<a class="btn green btn-xs btn-outline" style="width:90px" onclick=\'openLayuiWithAreaFunc("分系统编辑","/bdm/subsys/edit?_satid=' + $('#_hsatid').val() + '&_id=' + subsysrow._id + '",["900px","570px"],saveSubSysFunc)\'>编辑</a>&nbsp;&nbsp;' +
          '<a class="btn green btn-xs btn-outline" style="width:90px" onclick=\'openLayuiWithAreaFunc("添加单机","/bdm/device/add?_satid=' + $('#_hsatid').val() + '&_subsysid=' + subsysrow._id + '",["900px","600px"],saveDeviceFunc)\'>添加单机</a>&nbsp;&nbsp;' +
          '<a class="btn green btn-xs btn-outline" style="width:90px" onclick=\'tabs("/bdm/parameter/maintain?_satid=' + $('#_hsatid').val() + '&_subsysid=' + subsysrow._id + '","' + $('#_hsatname').val() + subsysrow.name + '遥测参数维护")\'>维护遥测参数</a>&nbsp;&nbsp;' +
          '<a class="btn green btn-xs btn-outline" style="width:90px" onclick=\'tabs("/bdm/instruction/maintain?_satid=' + $('#_hsatid').val() + '&_subsysid=' + subsysrow._id + '","' + $('#_hsatname').val() + subsysrow.name + '遥控指令维护")\'>维护遥控指令</a>&nbsp;&nbsp;' +
          '<a class="btn green btn-xs btn-outline" style="width:90px" onclick=\'tabs("/bdm/subsys/params?_satid=' + $('#_hsatid').val() + '&_subsysid=' + subsysrow._id + '","' + $('#_hsatname').val() + subsysrow.name + '关键参数管理")\'>关键参数管理</a>&nbsp;&nbsp;' +
          '<a class="btn red btn-xs btn-outline" style="width:90px" onclick=\'openLayuiWithAreaFunc("删除分系统","/bdm/index/confimCriticalOP' + '?_id=' + subsysrow._id + '&_satid=' + $('#_hsatid').val() + '&operName=删除分系统：' + subsysrow.name + '",["330px","230px"],delSubsysFunc)\'>删除</a>';
      }
    }];
    var cur_table = $detail.html('<div id="dv" class="box-content">' +
      '<table id="subsystable_' + satrow._id + '" data-reorderable-columns="true"></table></div>').find('table');
    $(cur_table).bootstrapTable({
      url: '/bdm/subsys/getList',
      method: 'get',
      queryParams: {'_satid': satrow._id},
      locale: 'zh-CN',
      dataType: 'json',
      detailView: true,
      sidePagination: 'client', //客户端处理分页
      striped: true,
      undefinedText: '',
      singleSelect: false,
      pagination: true,
      pageSize: 10,
      pageNumber: 1,
      pageList: [10, 30, 50, 100],
      cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
      search: false, //不显示 搜索框
      uniqueId: '_id', //每一行的唯一标识，一般为主键列
      showColumns: false, //不显示下拉框（选择显示的列）
      columns: subsysCols,
      onLoadSuccess: function() { //加载成功时执行
      },
      onExpandRow: function(index, subsysrow, $subdetail) {
        InitDevice(index, satrow, subsysrow, $subdetail);
      }
    });
  }

  function InitGroundDevice(index, satrow, $detail) {
    var subsysCols = [{
      field: 'name',
      title: '地面设备名称',
      sortable: true
    }, {
      field: 'code',
      title: '地面设备代号',
      sortable: true
    }, {
      field: 'remark',
      title: '设备描述',
      sortable: true
    }, {
      field: 'responsible',
      title: '责任单位',
      sortable: true
    }, {
      title: '操作',
      formatter: function(value, subsysrow, index) {
        return '<a class="btn green btn-xs btn-outline" onclick=\'openLayuiWithAreaFunc("地面设备编辑","/bdm/grounddev/edit?_satid=' + $('#_hsatid').val() + '&_id=' + subsysrow._id + '",["900px","550px"],saveGroundDevFunc)\'>编辑</a>&nbsp;&nbsp;' +
          '<a class="btn green btn-xs btn-outline" onclick=\'tabs("/bdm/parameter/maintain?_satid=' + $('#_hsatid').val() + '&_subsysid=' + subsysrow._id + '","' + $('#_hsatname').val() + subsysrow.name + '地面参数维护")\'>维护遥地面设备参数</a>&nbsp;&nbsp;' +
          '<a class="btn green btn-xs btn-outline" onclick=\'tabs("/bdm/instruction/maintain?_satid=' + $('#_hsatid').val() + '&_subsysid=' + subsysrow._id + '","' + $('#_hsatname').val() + subsysrow.name + '地面指令维护")\'>维护地面设备指令</a>&nbsp;&nbsp;' +
          '<a class="btn red btn-xs btn-outline" onclick=\'openLayuiWithAreaFunc("删除地面设备","/bdm/index/confimCriticalOP' + '?_id=' + subsysrow._id + '&_satid=' + $('#_hsatid').val() + '&operName=删除地面设备：' + subsysrow.name + '",["330px","230px"],delGroundDevFunc)\'>删除</a>';
      }
    }];
    var cur_table = $detail.html('<div id="dv" class="box-content">' +
      '<table id="grounddevtable_' + satrow._id + '" data-reorderable-columns="true"></table></div>').find('table');
    $(cur_table).bootstrapTable({
      url: '/bdm/grounddev/getList',
      method: 'get',
      queryParams: {'_satid': satrow._id},
      locale: 'zh-CN',
      dataType: 'json',
      detailView: false,
      sidePagination: 'client',
      striped: true,
      undefinedText: '',
      singleSelect: false,
      pagination: true,
      pageSize: 10,
      pageNumber: 1,
      pageList: [10, 30, 50, 100],
      cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
      search: false, //不显示 搜索框
      uniqueId: '_id', //每一行的唯一标识，一般为主键列
      showColumns: false, //不显示下拉框（选择显示的列）
      columns: subsysCols,
      onLoadSuccess: function() { //加载成功时执行
      },
      onExpandRow: function(index, subsysrow, $subdetail) {
      }
    });
  }

  function InitDevice(index, satrow, subsysrow, $detail) {
    var deviceCols = [{
      field: 'name',
      title: '单机名称',
      sortable: true
    }, {
      field: 'code',
      title: '代号',
      sortable: true
    }, {
      field: 'product',
      title: '产品化单机',
      sortable: true
    }, {
      field: 'spectrum',
      title: '型谱',
      sortable: true
    }, {
      title: '操作',
      formatter: function(value, devicerow, index) {
        return '<a class="btn green btn-xs btn-outline" onclick=\'openLayuiWithAreaFunc("单机编辑","/bdm/device/edit?_satid=' + $('#_hsatid').val() + '&_id=' + devicerow._id + '",["900px","600px"],saveDeviceFunc)\'>编辑</a>&nbsp;&nbsp;' +
          '<a class="btn green btn-xs btn-outline" onclick=\'tabs("/bdm/device/params?_satid=' + $('#_hsatid').val() + '&_deviceid=' + devicerow._id + '","' + $('#_hsatname').val() + devicerow.name + '关键参数管理")\'>关键参数管理</a>&nbsp;&nbsp;' +
        '<a class="btn red btn-xs btn-outline" onclick=\'openLayuiWithAreaFunc("删除单机","/bdm/index/confimCriticalOP' + '?_id=' + devicerow._id + '&_satid=' + $('#_hsatid').val() + '&_subsysid=' + subsysrow._id + '&operName=删除单机：' + devicerow.name + '",["330px","230px"],delDeviceFunc)\'>删除</a>';
      }
    }];
    var cur_table = $detail.html('<div class="box-content">' +
      '<table id="devicetable_' + subsysrow._id + '" data-reorderable-columns="true"></table></div>').find('table');
    $(cur_table).bootstrapTable({
      url: '/bdm/device/getList',
      method: 'get',
      queryParams: {'_satid': satrow._id, '_subsysid': subsysrow._id},
      locale: 'zh-CN',
      dataType: 'json',
      sidePagination: 'client', //客户端处理分页
      detailView: false,
      striped: true,
      undefinedText: '',
      singleSelect: false,
      pagination: true,
      pageSize: 10,
      pageNumber: 1,
      pageList: [10, 30, 50, 100],
      cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
      search: false, //不显示 搜索框
      uniqueId: '_id', //每一行的唯一标识，一般为主键列
      showColumns: false, //不显示下拉框（选择显示的列）
      columns: deviceCols,
      onLoadSuccess: function() { //加载成功时执行
      }
    });
  }

  function InitChannel(index, satrow, $detail) {
    var subsysCols = [{
      field: 'name',
      title: '数据类型名称',
      sortable: true
    }, {
      field: 'code',
      title: '数据类型代号',
      sortable: true
    }, {
      field: 'type',
      title: '通道类型',
      sortable: true,
      formatter: function(value, channelrow, index) {
        if(value==0)return '指令';
        else if(value==1)return '遥测原码';
        else if(value==2)return '遥测工程值';
        else if(value==3)return '设备遥测';
        else if(value==4)return '状态数据';
        else if(value==5)return '源包数据';
      }
    }, {
      field: 'mirrorcode',
      title: '映射通道代号',
      sortable: true
    }, {
      title: '操作',
      formatter: function(value, channelrow, index) {
        return '<a class="btn green btn-xs btn-outline" onclick=\'openLayuiWithAreaFunc("数据类型编辑","/bdm/channel/edit?_satid=' + $('#_hsatid').val() + '&_id=' + channelrow._id + '",["900px","500px"],saveChannelFunc)\'>编辑</a>&nbsp;&nbsp;' +
          '<a class="btn red btn-xs btn-outline" onclick=\'openLayuiWithAreaFunc("删除数据类型","/bdm/index/confimCriticalOP' + '?_id=' + channelrow._id + '&_satid=' + $('#_hsatid').val() + '&operName=删除数据类型：' + channelrow.name + '",["330px","230px"],delChannelFunc)\'>删除</a>';
      }
    }];
    var cur_table = $detail.html('<div id="dv" class="box-content">' +
      '<table id="channeltable_' + satrow._id + '" data-reorderable-columns="true"></table></div>').find('table');
    $(cur_table).bootstrapTable({
      url: '/bdm/channel/getList',
      method: 'get',
      queryParams: {'_satid': satrow._id},
      locale: 'zh-CN',
      dataType: 'json',
      detailView: false,
      sidePagination: 'client', //客户端处理分页
      striped: true,
      undefinedText: '',
      singleSelect: false,
      pagination: true,
      pageSize: 10,
      pageNumber: 1,
      pageList: [10, 30, 50, 100],
      cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
      search: false, //不显示 搜索框
      uniqueId: '_id', //每一行的唯一标识，一般为主键列
      showColumns: false, //不显示下拉框（选择显示的列）
      columns: subsysCols,
      onLoadSuccess: function() { //加载成功时执行
      },
    });
  }

  function InitVCType(index, satrow, $detail) {
    var subsysCols = [{
      field: 'name',
      title: '虚拟信道名称',
      sortable: true
    }, {
      field: 'vcno',
      title: '虚拟信道编码',
      sortable: true
    }, {
      field: 'vcid',
      title: '虚拟信道标识',
      sortable: true
    }, {
      field: 'channelcode',
      title: '数据通道代号',
      sortable: true
    }, {
      field: 'channelname',
      title: '数据通道名称',
      sortable: true
    }, {
      field: 'describe',
      title: '描述信息',
      sortable: true
    },{
      title: '操作',
      formatter: function(value, vcrow, index) {
        return '<a class="btn green btn-xs btn-outline" onclick=\'openLayuiWithAreaFunc("虚拟信道编辑","/bdm/vctype/edit?_satid=' + $('#_hsatid').val() + '&_id=' + vcrow._id + '",["900px","500px"],saveVCTypeFunc)\'>编辑</a>&nbsp;&nbsp;' +
          '<a class="btn red btn-xs btn-outline" onclick=\'openLayuiWithAreaFunc("删除虚拟信道","/bdm/index/confimCriticalOP' + '?_id=' + vcrow._id + '&_satid=' + $('#_hsatid').val() + '&operName=删除虚拟信道：' + vcrow.name + '",["330px","230px"],delVCTypeFunc)\'>删除</a>';
      }
    }];
    var cur_table = $detail.html('<div id="dv" class="box-content">' +
      '<table id="vctypetable_' + satrow._id + '" data-reorderable-columns="true"></table></div>').find('table');
    $(cur_table).bootstrapTable({
      url: '/bdm/vctype/getList',
      method: 'get',
      queryParams: {'_satid': satrow._id},
      locale: 'zh-CN',
      dataType: 'json',
      detailView: false,
      sidePagination: 'client', //客户端处理分页
      striped: true,
      undefinedText: '',
      singleSelect: false,
      pagination: true,
      pageSize: 10,
      pageNumber: 1,
      pageList: [10, 30, 50, 100],
      cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
      search: false, //不显示 搜索框
      uniqueId: '_id', //每一行的唯一标识，一般为主键列
      showColumns: false, //不显示下拉框（选择显示的列）
      columns: subsysCols,
      onLoadSuccess: function() { //加载成功时执行

      },
    });
  }

  function InitRuleGroup(index, satrow, $detail) {
    var cols = [{
      field: 'GROUP_ID',
      title: '分组标识',
      sortable: true
    }, {
      field: 'GROUP_NAME',
      title: '分组名称',
      sortable: true
    },
    {
      title: '操作',
      formatter: function(value, grow, index) {
        return '<a class="btn green btn-xs btn-outline" style="width:90px" onclick="#">编辑</a>&nbsp;&nbsp;' +
          '<a class="btn green btn-xs btn-outline" style="width:90px" onclick="#">添加规则</a>&nbsp;&nbsp;' +
          '<a class="btn green btn-xs btn-outline" style="width:90px" onclick=\'tabs("/bdm/rule/index?_satid=' + $('#_hsatid').val() + '&_groupid=' + grow.GROUP_ID + '","' + $('#_hsatname').val() + grow.GROUP_NAME + '判读规则维护")\'>维护判读规则</a>&nbsp;&nbsp;' +
          '<a class="btn red btn-xs btn-outline" style="width:90px" onclick="#">删除</a>';
      }
    }];
    var cur_table = $detail.html('<div id="dv" class="box-content">' +
      '<table id="rulegrouptable_' + satrow._id + '" data-reorderable-columns="true"></table></div>').find('table');
    $(cur_table).bootstrapTable({
      url: '/bdm/rule/getGroupList',
      method: 'get',
      queryParams: {'_satid': satrow._id},
      locale: 'zh-CN',
      dataType: 'json',
      detailView: false,
      sidePagination: 'client', //客户端处理分页
      striped: true,
      undefinedText: '',
      singleSelect: false,
      pagination: true,
      pageSize: 10,
      pageNumber: 1,
      pageList: [10, 30, 50, 100],
      cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
      search: false, //不显示 搜索框
      uniqueId: '_id', //每一行的唯一标识，一般为主键列
      showColumns: false, //不显示下拉框（选择显示的列）
      columns: cols,
      onLoadSuccess: function() { //加载成功时执行

      },
    });
  }

  function InitMode(index, satrow, $detail) {
    var subsysCols = [{
      field: 'name',
      title: '模式名称',
      sortable: true
    }, {
      field: 'code',
      title: '模式代号',
      sortable: true
    }, {
      field: 'describe',
      title: '模式说明',
      sortable: true
    }, {
      field: 'channelcode',
      title: '所属数据通道代号',
      sortable: true
    },
      {
        field: 'channelname',
        title: '所属数据通道名称',
        sortable: true
      },
      {
        title: '操作',
        formatter: function(value, moderow, index) {
          return '<a class="btn green btn-xs btn-outline" onclick=\'openLayuiWithAreaFunc("模式编辑","/bdm/mode/edit?_satid=' + $('#_hsatid').val() + '&_id=' + moderow._id + '",["900px","580px"],saveModeFunc)\'>编辑</a>&nbsp;&nbsp;' +
                '<a class="btn red btn-xs btn-outline" onclick=\'openLayuiWithAreaFunc("删除模式","/bdm/index/confimCriticalOP' + '?_id=' + moderow._id + '&_satid=' + $('#_hsatid').val() + '&operName=删除模式：' + moderow.name + '",["330px","230px"],delModeFunc)\'>删除</a>';
        }
      }];
    var cur_table = $detail.html('<div id="dv" class="box-content">' +
      '<table id="modetable_' + satrow._id + '" data-reorderable-columns="true"></table></div>').find('table');
    $(cur_table).bootstrapTable({
      url: '/bdm/mode/getList',
      method: 'get',
      queryParams: {'_satid': satrow._id},
      locale: 'zh-CN',
      dataType: 'json',
      detailView: false,
      sidePagination: 'client', //客户端处理分页
      striped: true,
      undefinedText: '',
      singleSelect: false,
      pagination: true,
      pageSize: 10,
      pageNumber: 1,
      pageList: [10, 30, 50, 100],
      cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
      search: true, //不显示 搜索框
      searchAlign: 'left',
      uniqueId: '_id', //每一行的唯一标识，一般为主键列
      showColumns: false, //不显示下拉框（选择显示的列）
      columns: subsysCols,
      onLoadSuccess: function() { //加载成功时执行
      },
    });
  }

  function InitFormula(index, satrow, $detail) {
    var subsysCols = [{
      field: 'name',
      title: '公式名称',
      sortable: true
    }, {
      field: 'code',
      title: '公式编号',
      sortable: true
    }, {
      field: 'type',
      title: '公式类型',
      sortable: true
    }, {
      field: 'describe',
      title: '公式说明',
      sortable: true
    }, {
      title: '操作',
      formatter: function(value, formularow, index) {
        return '<a class="btn green btn-xs btn-outline" onclick=\'openLayuiWithAreaFunc("计算公式编辑","/bdm/formula/edit?_satid=' + $('#_hsatid').val() + '&_id=' + formularow._id + '",["900px","680px"],saveFormulaFunc)\'>编辑</a>&nbsp;&nbsp;' +
          '<a class="btn red btn-xs btn-outline" onclick=\'openLayuiWithAreaFunc("删除计算公式","/bdm/index/confimCriticalOP' + '?_id=' + formularow._id + '&_satid=' + satrow._id + '&operName=删除计算公式：' + formularow.name + '",["330px","230px"],delFormulaFunc)\'>删除</a>';
      }
    }];
    var cur_table = $detail.html('<div id="dv" class="box-content">' +
      '<table id="formulatable_' + satrow._id + '" data-reorderable-columns="true"></table></div>').find('table');
    $(cur_table).bootstrapTable({
      url: '/bdm/formula/getList',
      method: 'get',
      queryParams: {'_satid': satrow._id},
      locale: 'zh-CN',
      dataType: 'json',
      detailView: false,
      sidePagination: 'client', //客户端处理分页
      striped: true,
      undefinedText: '',
      singleSelect: false,
      pagination: true,
      pageSize: 10,
      pageNumber: 1,
      pageList: [10, 30, 50, 100],
      cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
      search: false, //不显示 搜索框
      uniqueId: '_id', //每一行的唯一标识，一般为主键列
      showColumns: false, //不显示下拉框（选择显示的列）
      columns: subsysCols,
      onLoadSuccess: function() { //加载成功时执行
      },
    });
  }

  function InitRegulate(index, satrow, $detail) {
    var subsysCols = [{
      field: 'name',
      title: '校准方法名称',
      sortable: true
    }, {
      field: 'code',
      title: '校准方法代号',
      sortable: true
    }, {
      field: 'type',
      title: '校准类型',
      sortable: true
    }, {
      field: 'way',
      title: '校准方法',
      sortable: true
    }
      , {
        field: 'describe',
        title: '说明',
        sortable: true
      }, {
        title: '操作',
        formatter: function(value, regulaterow, index) {
          return '<a class="btn green btn-xs btn-outline" onclick=\'openLayuiWithAreaFunc("校准方法编辑","/bdm/regulate/edit?_satid=' + $('#_hsatid').val() + '&_id=' + regulaterow._id + '",["900px","580px"],saveRegulateFunc)\'>编辑</a>&nbsp;&nbsp;' +
            '<a class="btn red btn-xs btn-outline" onclick=\'openLayuiWithAreaFunc("删除校准方法","/bdm/index/confimCriticalOP' + '?_id=' + regulaterow._id + '&_satid=' + $('#_hsatid').val() + '&operName=删除校准方法：' + regulaterow.name + '",["330px","230px"],delRegulateFunc)\'>删除</a>';
        }
      }];
    var cur_table = $detail.html('<div id="dv" class="box-content">' +
      '<table id="regulatetable_' + satrow._id + '" data-reorderable-columns="true"></table></div>').find('table');
    $(cur_table).bootstrapTable({
      url: '/bdm/regulate/getList',
      method: 'get',
      queryParams: {'_satid': satrow._id},
      locale: 'zh-CN',
      dataType: 'json',
      detailView: false,
      sidePagination: 'client', //客户端处理分页
      striped: true,
      undefinedText: '',
      singleSelect: false,
      pagination: true,
      pageSize: 10,
      pageNumber: 1,
      pageList: [10, 30, 50, 100],
      cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
      search: false, //不显示 搜索框
      uniqueId: '_id', //每一行的唯一标识，一般为主键列
      showColumns: false, //不显示下拉框（选择显示的列）
      columns: subsysCols,
      onLoadSuccess: function() { //加载成功时执行
      },
    });
  }

  function InitAllTM(index, satrow, $detail) {
    var cols = [{
      field: 'tmid',
      title: '遥测ID',
      sortable: true
    }, {
      field: 'tmcode',
      title: '遥测代号',
      sortable: true
    }, {
      field: 'paramid',
      title: '遥测编号',
      sortable: true
    }, {
      field: 'tmcaption',
      title: '遥测名称',
      sortable: true
    }
      , {
        field: 'subsysname',
        title: '所属分系统',
        sortable: true
      }, {
        field: 'lastmodify',
        title: '修改时间',
        sortable: true
      }, {
        title: '操作',
        formatter: function(value, tmrow, index) {
          return '<a class="btn green btn-xs btn-outline" onclick=\'openLayuiWithAreaFunc("遥测参数编辑","/bdm/parameter/edit?_satid=' + $('#_hsatid').val() + '&_id=' + tmrow._id + '",["900px","650px"],saveParameterFunc)\'>编辑</a>&nbsp;&nbsp;' +
            '<a class="btn red btn-xs btn-outline" onclick=\'openLayuiWithAreaFunc("删除遥测参数","/bdm/index/confimCriticalOP' + '?_id=' + tmrow._id + '&_satid=' + $('#_hsatid').val() + '&operName=删除遥测参数：' + tmrow.name + '",["330px","230px"],delParameterFunc)\'>删除</a>';
        }
      }];
    var cur_table = $detail.html('<div id="dv" class="box-content">' +
      '<table id="parametertable_' + satrow._id + '" data-reorderable-columns="true"></table></div>').find('table');
    $(cur_table).bootstrapTable({
      url: '/bdm/parameter/getList',
      method: 'get',
      queryParams: {'_satid': satrow._id},
      locale: 'zh-CN',
      dataType: 'json',
      detailView: false,
      sidePagination: 'client', //客户端处理分页
      striped: true,
      undefinedText: '',
      singleSelect: false,
      pagination: true,
      pageSize: 10,
      pageNumber: 1,
      pageList: [10, 30, 50, 100],
      cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
      search: true, //不显示 搜索框
      searchAlign: 'left',
      uniqueId: '_id', //每一行的唯一标识，一般为主键列
      showColumns: false, //不显示下拉框（选择显示的列）
      columns: cols,
      onLoadSuccess: function() { //加载成功时执行
      },
    });
  }

  function InitAllTC(index, satrow, $detail) {
    var cols = [{
      field: 'insid',
      title: '指令代号',
      sortable: true
    },
      {
        field: 'InsNo',
        title: '指令编号',
        sortable: true
      }
      , {
        field: 'InsName',
        title: '指令名称',
        sortable: true
      }, {
        field: 'subsysname',
        title: '所属分系统',
        sortable: true
      }, {
        field: 'channel',
        title: '所属数据类型',
        sortable: true
      },
      {
        title: '操作',
        formatter: function(value, tcrow, index) {
          return '<a class="btn green btn-xs btn-outline" onclick=\'openLayuiWithFunc("遥控指令编辑","/bdm/instruction/edit?_satid=' + $('#_hsatid').val() + '&_id=' + tcrow._id + '",saveInstructionFunc)\'>编辑</a>&nbsp;&nbsp;' +
            '<a class="btn red btn-xs btn-outline" onclick=\'openLayuiWithAreaFunc("删除遥控指令","/bdm/index/confimCriticalOP' + '?_id=' + tcrow._id + '&_satid=' + $('#_hsatid').val() + '&operName=删除遥控指令：' + tcrow.insid + '",["330px","230px"],delInstructionFunc)\'>删除</a>';
        }
      }];
    var cur_table = $detail.html('<div id="dv" class="box-content">' +
      '<table id="instructiontable_' + satrow._id + '" data-reorderable-columns="true"></table></div>').find('table');
    $(cur_table).bootstrapTable({
      url: '/bdm/instruction/getList',
      method: 'get',
      queryParams: {'_satid': satrow._id},
      locale: 'zh-CN',
      dataType: 'json',
      detailView: false,
      sidePagination: 'client', //客户端处理分页
      striped: true,
      undefinedText: '',
      singleSelect: false,
      pagination: true,
      pageSize: 10,
      pageNumber: 1,
      pageList: [10, 30, 50, 100],
      cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
      search: true, //不显示 搜索框
      searchAlign: 'left',
      uniqueId: '_id', //每一行的唯一标识，一般为主键列
      showColumns: false, //不显示下拉框（选择显示的列）
      columns: cols,
      onLoadSuccess: function() { //加载成功时执行
      },
    });
  }

  window.onload = function() {
    $('#sattable').bootstrapTable('expandRow', 0);
  };
</script>


{% include "./footer.html" %}
